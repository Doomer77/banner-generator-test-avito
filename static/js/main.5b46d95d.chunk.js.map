{"version":3,"sources":["components/Banner/Banner.jsx","components/App/main.style.js","components/Form/Form.jsx","components/App/App.js","index.js"],"names":["Banner","fillColor","href","resize","photo","text","getPng","canvasRef","useRef","useEffect","canvas","current","context","getContext","fillStyle","fillRect","width","height","imageObj","Image","crossOrigin","onload","drawImage","strokeText","font","toDataURL","src","className","ref","onClick","document","location","useStyles","makeStyles","theme","root","margin","spacing","Form","setFillColor","setResize","setHref","setPhoto","setText","classes","type","onChange","e","target","value","name","TextField","label","id","TextareaAutosize","rowsMax","rowsMin","placeholder","App","useState","downloadPng","setDownloadPng","param","size","Button","navigator","clipboard","writeText","ReactDOMServer","renderToStaticMarkup","style","backgroundColor","alt","then","alert","catch","err","variant","color","jsonData","JSON","stringify","getJSON","download","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5b46d95d.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport './banner.css';\r\n\r\nexport const Banner = ({ fillColor = '#CFCFCF', href = './', resize, photo, text, getPng }) => {\r\n  const canvasRef = useRef(null);\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext('2d');\r\n    context.fillStyle = fillColor;\r\n    context.fillRect(0, 0, resize.width, resize.height);\r\n    if (photo) {\r\n\r\n      let imageObj = new Image();\r\n      imageObj.crossOrigin = '*';\r\n      imageObj.onload = () => {\r\n        context.drawImage(imageObj, 0, 0);\r\n        context.strokeText(text, 30, 70)\r\n        context.font = '20px Roboto';\r\n        getPng(canvas.toDataURL());\r\n      };\r\n      imageObj.src = photo;\r\n    }  \r\n  }, [fillColor, resize, photo, href, text, getPng]);\r\n\r\n  return (\r\n    <canvas\r\n      className=\"banner-main\"\r\n      ref={canvasRef}\r\n      width={resize.width}\r\n      height={resize.height}\r\n      onClick={() => (document.location.href = href)}\r\n    />\r\n  );\r\n};\r\n\r\n/* eslint-disable */\r\n// <div className=\"template-txt\">{`${resize.width} X ${resize.height}`}</div>\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n","import React from 'react';\r\nimport { TextField, TextareaAutosize } from '@material-ui/core';\r\nimport { useStyles } from '../../components/App/main.style';\r\nimport './Form.css'\r\n\r\n\r\nexport const Form = ({\r\n  setFillColor,\r\n  fillColor,\r\n  setResize,\r\n  resize,\r\n  setHref,\r\n  href,\r\n  setPhoto,\r\n  photo,\r\n  setText,\r\n  text,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <input\r\n        className=\"bcg-color\"\r\n        type=\"color\"\r\n        onChange={(e) => setFillColor(e.target.value)}\r\n        value={fillColor}\r\n        name=\"fill-color\"\r\n      />\r\n      <TextField\r\n        label=\"Ширина\"\r\n        type=\"number\"\r\n        name=\"width\"\r\n        onChange={(e) => setResize('width', e.target.value)}\r\n        value={resize.width}\r\n      />\r\n      <TextField\r\n        label=\"Высота\"\r\n        type=\"number\"\r\n        name=\"height\"\r\n        onChange={(e) => setResize('height', e.target.value)}\r\n        value={resize.height}\r\n      />\r\n      <TextField\r\n        label=\"Ссылка перехода\"\r\n        type=\"text\"\r\n        name=\"href\"\r\n        onChange={(e) => setHref(e.target.value)}\r\n        value={href}\r\n      />\r\n      <TextField\r\n        label=\"Ссылку картинки\"\r\n        type=\"text\"\r\n        className=\"upload\"\r\n        id=\"photo-upload\"\r\n        onChange={(e) => setPhoto(e.target.value)}\r\n        value={photo}\r\n      />\r\n      <TextareaAutosize\r\n        rowsMax={3}\r\n        rowsMin={3}\r\n        label=\"Введите текст банера\"\r\n        type=\"text\"\r\n        className=\"upload\"\r\n        id=\"photo-upload\"\r\n        onChange={(e) => setText(e.target.value)}\r\n        value={text}\r\n        placeholder=\"Введите текст\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { Banner } from '../../components/Banner/Banner';\r\nimport { Form } from '../../components/Form/Form';\r\nimport { useStyles } from './main.style';\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [fillColor, setFillColor] = useState();\r\n  const [href, setHref] = useState('');\r\n  const [photo, setPhoto] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [downloadPng, setDownloadPng] = useState();\r\n  const [resize, setResize] = useState({\r\n    height: 300,\r\n    width: 550,\r\n  });\r\n  const classes = useStyles();\r\n  // Получает картинку из канваса в png\r\n  const getPng = (e) => {\r\n    setDownloadPng(e)\r\n  };\r\n\r\n  // Тут сформировать JSON обьект из стэйта\r\n  const getJSON = () => {\r\n    const jsonData = JSON.stringify({\r\n      text: text,\r\n      href: href,\r\n      photo: photo,\r\n      fillColor: fillColor,\r\n    })\r\n    navigator.clipboard.writeText(jsonData)\r\n      .then(() => {\r\n        alert('JSON copy!')\r\n      })\r\n      .catch(err => {\r\n        alert('ERROR!')\r\n      });\r\n  };\r\n\r\n  const getHtml = () => {\r\n    navigator.clipboard.writeText(ReactDOMServer.renderToStaticMarkup(\r\n      <div style={{ backgroundColor: fillColor }}>\r\n        <img src={`${href}`} alt=\"\" />\r\n        <p>{`${text}`}</p>\r\n      </div>\r\n    ))\r\n      .then(() => {\r\n        alert('HTML copy!')\r\n      })\r\n      .catch(err => {\r\n        alert('ERROR!')\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Form className=\"form\"\r\n        setFillColor={(e) => setFillColor(e)}\r\n        fillColor={fillColor}\r\n        setResize={(param, size) => setResize({ ...resize, [param]: size })}\r\n        resize={resize}\r\n        setHref={(e) => setHref(e)}\r\n        href={href}\r\n        setPhoto={(e) => setPhoto(e)}\r\n        photo={photo}\r\n        setText={(e) => setText(e)}\r\n        text={text}\r\n      />\r\n      <Banner className=\"banner\"\r\n        fillColor={fillColor}\r\n        resize={resize}\r\n        href={href}\r\n        photo={photo}\r\n        text={text}\r\n        getPng={getPng}\r\n      />\r\n      <div className={classes.root}>\r\n        <Button  onClick={() => getHtml()} variant=\"contained\" color=\"primary\">Скопировать в HTML</Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={() => getJSON()}>Скопировать в JSON</Button>\r\n        <Button variant=\"contained\"><a className=\"link\" href={downloadPng} download>Сохранить в png</a></Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}